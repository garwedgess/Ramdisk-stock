#!/sbin/sh

if [ -e /cache/recovery/boot ]
then
    rm /cache/recovery/boot
    touch /cache/recovery/enterrecovery
else
    # trigger blue LED
    echo '255' > /sys/class/leds/blue/brightness
    # trigger button-backlight
    echo '255' > /sys/class/leds/button-backlight/brightness
    # trigger short vibration
    echo "200" > /sys/class/timed_output/vibrator/enable

    # back key = recovery
    cat /dev/input/event4 > /dev/keycheck1&
    # vol-down key = aromafm
    cat /dev/input/event1 > /dev/keycheck2&

    sleep 3

    # disable blue LED
    echo '0' > /sys/class/leds/blue/brightness
    # trigger button-backlight
    echo '0' > /sys/class/leds/button-backlight/brightness

    kill -9 $!
fi


if [ -s /dev/keycheck1 -o -e /cache/recovery/enterrecovery ] || [ -s /dev/keycheck2 ]
then
    # fixing CPU clocks to avoid issues in recovery
    echo 806400 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    echo 122880 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    # correct LCD-backlight brightness
    echo '255' > /sys/class/leds/lcd-backlight/brightness

    rm /cache/recovery/enterrecovery

    mount -o remount,rw rootfs /

    # USB fixup "mass_storage, adb"
    TAG="usb"
    VENDOR_ID=0FCE
    PID_PREFIX=6
    USB_FUNCTION=mass_storage,adb
    # generate PID based on build.prop
    #PID_SUFFIX_PROP=$(/system/bin/getprop persist.usb.pid_suffix)
    #PID=${PID_PREFIX}${PID_SUFFIX_PROP}
    # hardcoded PID for ARC
    #PID=614F
    # hardcoded PID for PLAY
    PID=615D
    echo 0 > /sys/class/android_usb/android0/enable
    echo ${VENDOR_ID} > /sys/class/android_usb/android0/idVendor
    echo ${PID} > /sys/class/android_usb/android0/idProduct
    /system/bin/log -t ${TAG} -p i "usb product id: ${PID}"
    echo ${USB_FUNCTION} > /sys/class/android_usb/android0/functions
    /system/bin/log -t ${TAG} -p i "enabled usb functions: ${USB_FUNCTION}"
    echo 1 > /sys/class/android_usb/android0/enable
    /system/bin/setprop sys.usb.state ${USB_CONFIG_PROP}

    # shifting to "umount -l /partition" to avoid mounting issues in recovery
    umount -l /system
    umount -l /data
    umount -l /cache
    umount -l /sdcard
    umount -l /mnt/sdcard
    rm -r /sdcard
    rm -r /not/sdcard
    mkdir /sdcard
    mkdir /tmp
    rm /etc
    mkdir /etc
    cp /recovery.fstab /etc/recovery.fstab
    mount /dev/block/mmcblk0p1 /sdcard
    if [ -s /dev/keycheck2 ]
    then
        chmod 777 /res/aromafm
        if [ ! -s /sdcard/aromafm_data.zip ]
        then
            cp /res/aromafm_data.zip /sdcard/aromafm_data.zip
        fi
        if [ ! -s /sdcard/aromafm_data.zip.cfg ]
        then
            cp /res/aromafm_data.zip.cfg /sdcard/aromafm_data.zip.cfg
        fi
        if [ ! -s /sdcard/aromafm ]
        then
            cp /res/aromafm /sdcard/aromafm
        fi
        mount -o rw -t yaffs2 /dev/block/mtdblock0 /system
        mount -o rw -t yaffs2 /dev/block/mtdblock1 /data
        /sdcard/aromafm 1 0 /sdcard/aromafm_data.zip
        reboot
    elif [ -s /dev/keycheck1 -o -e /cache/recovery/enterrecovery ]
    then
        /sbin/recovery &
        /sbin/adbd_rec recovery 
    fi
fi

#continue booting
